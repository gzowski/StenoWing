
// Generated from javelin-layout file
var layer;
func setLayer(layerIndex, layerIdEvent) {
  releaseAll();
  layer = layerIndex;
  sendEvent(layerIdEvent);
}

func dispatchToLayer(functions) {
  var f = functions[[[resolveLayerIndex()]]];
  f();
}

func resolveLayerIndex() var {
  return layer;
}

func activate0() {
  setLayer(0, "layer_id: 0");
}

func activate1() {
  setLayer(1, "layer_id: 68079855");
  setGpioPin(17, 1);
}

func activate2() {
  setLayer(2, "layer_id: 158483956");
}

func activateDynamic() {
  dispatchToLayer([[[@activate0, @activate1, @activate2]]]);
}
func activateGlobal() {
}
func deactivate0() {
}

func deactivate1() {
  setGpioPin(17, 0);
}

func deactivate2() {
}

func deactivateDynamic() {
  dispatchToLayer([[[0, @deactivate1, 0]]]);
}
func deactivateGlobal() {
}
func init() {
  const SCRIPT_ID_USER1 = 11;
  setScript(SCRIPT_ID_USER1, @user1ScriptSetLayer);
  activate0();
}

func user1ScriptSetLayer(layerId) {
  var layerActivate = 0;
  if (layerId == 0) layerActivate = @activate0;
  if (layerId == 68079855) layerActivate = @activate1;
  if (layerId == 158483956) layerActivate = @activate2;
  if (layerActivate == 0) return;
  deactivateGlobal();
  deactivateDynamic();
  layerActivate();
  activateGlobal();
}

func onPress0() {
  dispatchToLayer([[[@onPress0_0, @onPress0_1, @onPress0_2]]]);
}
func onRelease0() {
  dispatchToLayer([[[@onRelease0_0, 0, @onRelease0_2]]]);
}

func onPress0_0() {
  pressStenoKey(0 /* "S1" */);
}
func onRelease0_0() {
  releaseStenoKey(0 /* "S1" */);
}

func onPress0_1() {
  for (var i = 0; i < 28; i = i + 1) { setRgb(i, 0, 0, 0); }
}
func onRelease0_1() {
}

func onPress0_2() {
  pressScanCode(20 /* "Q" */);
}
func onRelease0_2() {
  releaseScanCode(20 /* "Q" */);
}

func onPress1() {
  dispatchToLayer([[[@onPress1_0, @onPress1_1, @onPress1_2]]]);
}
func onRelease1() {
  dispatchToLayer([[[@onRelease1_0, 0, @onRelease1_2]]]);
}

func onPress1_0() {
  pressStenoKey(2 /* "T-" */);
}
func onRelease1_0() {
  releaseStenoKey(2 /* "T-" */);
}

func onPress1_1() {
  for (var i = 0; i < 11; i = i + 1) { setRgb(i, 4, 9, 90); }
for (var i = 11; i < 22; i = i + 1) { setRgb(i, 90, 6, 47); }
for (var i = 22; i < 28; i = i + 1) { setRgb(i, 48, 48, 48); }
}
func onRelease1_1() {
}

func onPress1_2() {
  pressScanCode(26 /* "W" */);
}
func onRelease1_2() {
  releaseScanCode(26 /* "W" */);
}

func onPress2() {
  dispatchToLayer([[[@onPress2_0, @onPress2_1, @onPress2_2]]]);
}
func onRelease2() {
  dispatchToLayer([[[@onRelease2_0, 0, @onRelease2_2]]]);
}

func onPress2_0() {
  pressStenoKey(4 /* "P-" */);
}
func onRelease2_0() {
  releaseStenoKey(4 /* "P-" */);
}

func onPress2_1() {
  for (var i = 0; i < 28; i = i + 1) { setRgb(i, 90, 6, 47); }
setRgb(0, 4, 9, 90);
setRgb(11, 4, 9, 90);
setRgb(4, 4, 9, 90);
setRgb(5, 4, 9, 90);
setRgb(15, 4, 9, 90);
setRgb(16, 4, 9, 90);
setRgb(22, 48, 48, 48);
setRgb(27, 48, 48, 48);
}
func onRelease2_1() {
}

func onPress2_2() {
  pressScanCode(8 /* "E" */);
}
func onRelease2_2() {
  releaseScanCode(8 /* "E" */);
}

func onPress3() {
  dispatchToLayer([[[@onPress3_0, @onPress3_1, @onPress3_2]]]);
}
func onRelease3() {
  dispatchToLayer([[[@onRelease3_0, 0, @onRelease3_2]]]);
}

func onPress3_0() {
  pressStenoKey(6 /* "H-" */);
}
func onRelease3_0() {
  releaseStenoKey(6 /* "H-" */);
}

func onPress3_1() {
  for (var i = 0; i < 28; i = i + 1) { setRgb(i, 64, 0, 0); }
}
func onRelease3_1() {
}

func onPress3_2() {
  pressScanCode(21 /* "R" */);
}
func onRelease3_2() {
  releaseScanCode(21 /* "R" */);
}

func onPress4() {
  dispatchToLayer([[[@onPress4_0, @onPress4_1, @onPress4_2]]]);
}
func onRelease4() {
  dispatchToLayer([[[@onRelease4_0, 0, @onRelease4_2]]]);
}

func onPress4_0() {
  pressStenoKey(10 /* "*1" */);
}
func onRelease4_0() {
  releaseStenoKey(10 /* "*1" */);
}

func onPress4_1() {
  for (var i = 0; i < 28; i = i + 1) { setRgb(i, 0, 64, 0); }
}
func onRelease4_1() {
}

func onPress4_2() {
  pressScanCode(23 /* "T" */);
}
func onRelease4_2() {
  releaseScanCode(23 /* "T" */);
}

func onPress5() {
  dispatchToLayer([[[@onPress5_0, @onPress5_1, @onPress5_2]]]);
}
func onRelease5() {
  dispatchToLayer([[[@onRelease5_0, 0, @onRelease5_2]]]);
}

func onPress5_0() {
  pressStenoKey(12 /* "*3" */);
}
func onRelease5_0() {
  releaseStenoKey(12 /* "*3" */);
}

func onPress5_1() {
  for (var i = 0; i < 28; i = i + 1) { setRgb(i, 0, 0, 64); }
}
func onRelease5_1() {
}

func onPress5_2() {
  pressScanCode(28 /* "Y" */);
}
func onRelease5_2() {
  releaseScanCode(28 /* "Y" */);
}

func onPress6() {
  dispatchToLayer([[[@onPress6_0, @onPress6_1, @onPress6_2]]]);
}
func onRelease6() {
  dispatchToLayer([[[@onRelease6_0, 0, @onRelease6_2]]]);
}

func onPress6_0() {
  pressStenoKey(16 /* "-F" */);
}
func onRelease6_0() {
  releaseStenoKey(16 /* "-F" */);
}

func onPress6_1() {
  for (var i = 0; i < 28; i = i + 1) { setRgb(i, 64, 64, 64); }
}
func onRelease6_1() {
}

func onPress6_2() {
  pressScanCode(24 /* "U" */);
}
func onRelease6_2() {
  releaseScanCode(24 /* "U" */);
}

func onPress7() {
  dispatchToLayer([[[@onPress7_0, @onPress7_1, @onPress7_2]]]);
}
func onRelease7() {
  dispatchToLayer([[[@onRelease7_0, 0, @onRelease7_2]]]);
}

func onPress7_0() {
  pressStenoKey(18 /* "-P" */);
}
func onRelease7_0() {
  releaseStenoKey(18 /* "-P" */);
}

func onPress7_1() {
  for (var i = 0; i < 28; i = i + 1) { setRgb(i, 20, 20, 20); }
}
func onRelease7_1() {
}

func onPress7_2() {
  pressScanCode(12 /* "I" */);
}
func onRelease7_2() {
  releaseScanCode(12 /* "I" */);
}

func onPress8() {
  dispatchToLayer([[[@onPress8_0, @onPress8_1, @onPress8_2]]]);
}
func onRelease8() {
  dispatchToLayer([[[@onRelease8_0, 0, @onRelease8_2]]]);
}

func onPress8_0() {
  pressStenoKey(20 /* "-L" */);
}
func onRelease8_0() {
  releaseStenoKey(20 /* "-L" */);
}

func onPress8_1() {
  for (var i = 0; i < 28; i = i + 1) { setRgb(i, 20, 0, 20); }
}
func onRelease8_1() {
}

func onPress8_2() {
  pressScanCode(18 /* "O" */);
}
func onRelease8_2() {
  releaseScanCode(18 /* "O" */);
}

func onPress9() {
  dispatchToLayer([[[@onPress9_0, @onPress9_1, @onPress9_2]]]);
}
func onRelease9() {
  dispatchToLayer([[[@onRelease9_0, 0, @onRelease9_2]]]);
}

func onPress9_0() {
  pressStenoKey(22 /* "-T" */);
}
func onRelease9_0() {
  releaseStenoKey(22 /* "-T" */);
}

func onPress9_1() {
  for (var i = 0; i < 4; i = i + 1) { setRgb(i, 92, 0, 10); }
for (var i = 4; i < 6; i = i + 1) { setRgb(i, 0, 31, 92); }
for (var i = 6; i < 11; i = i + 1) { setRgb(i, 41, 92, 0); }
for (var i = 11; i < 15; i = i + 1) { setRgb(i, 92, 0, 10); }
for (var i = 15; i < 17; i = i + 1) { setRgb(i, 0, 31, 92); }
for (var i = 17; i < 22; i = i + 1) { setRgb(i, 41, 92, 0); }
for (var i = 22; i < 28; i = i + 1) { setRgb(i, 92, 50, 0); }
}
func onRelease9_1() {
}

func onPress9_2() {
  pressScanCode(19 /* "P" */);
}
func onRelease9_2() {
  releaseScanCode(19 /* "P" */);
}

func onPress10() {
  dispatchToLayer([[[@onPress10_0, @onPress10_1, @onPress10_2]]]);
}
func onRelease10() {
  dispatchToLayer([[[@onRelease10_0, 0, @onRelease10_2]]]);
}

func onPress10_0() {
  pressStenoKey(24 /* "-D" */);
}
func onRelease10_0() {
  releaseStenoKey(24 /* "-D" */);
}

func onPress10_1() {
  for (var i = 0; i < 4; i = i + 1) { setRgb(i, 46, 0, 5); }
for (var i = 4; i < 6; i = i + 1) { setRgb(i, 0, 15, 46); }
for (var i = 6; i < 11; i = i + 1) { setRgb(i, 20, 46, 0); }
for (var i = 11; i < 15; i = i + 1) { setRgb(i, 46, 0, 5); }
for (var i = 15; i < 17; i = i + 1) { setRgb(i, 0, 15, 46); }
for (var i = 17; i < 22; i = i + 1) { setRgb(i, 20, 46, 0); }
for (var i = 22; i < 28; i = i + 1) { setRgb(i, 46, 25, 0); }
}
func onRelease10_1() {
}

func onPress10_2() {
  pressScanCode(47 /* "[" */);
}
func onRelease10_2() {
  releaseScanCode(47 /* "[" */);
}

func onPress11() {
  dispatchToLayer([[[@onPress11_0, 0, @onPress11_2]]]);
}
func onRelease11() {
  dispatchToLayer([[[@onRelease11_0, 0, @onRelease11_2]]]);
}

func onPress11_0() {
  pressStenoKey(1 /* "S2" */);
}
func onRelease11_0() {
  releaseStenoKey(1 /* "S2" */);
}

func onPress11_2() {
  pressScanCode(4 /* "A" */);
}
func onRelease11_2() {
  releaseScanCode(4 /* "A" */);
}

func onPress12() {
  dispatchToLayer([[[@onPress12_0, 0, @onPress12_2]]]);
}
func onRelease12() {
  dispatchToLayer([[[@onRelease12_0, 0, @onRelease12_2]]]);
}

func onPress12_0() {
  pressStenoKey(3 /* "K-" */);
}
func onRelease12_0() {
  releaseStenoKey(3 /* "K-" */);
}

func onPress12_2() {
  pressScanCode(22 /* "S" */);
}
func onRelease12_2() {
  releaseScanCode(22 /* "S" */);
}

func onPress13() {
  dispatchToLayer([[[@onPress13_0, 0, @onPress13_2]]]);
}
func onRelease13() {
  dispatchToLayer([[[@onRelease13_0, 0, @onRelease13_2]]]);
}

func onPress13_0() {
  pressStenoKey(5 /* "W-" */);
}
func onRelease13_0() {
  releaseStenoKey(5 /* "W-" */);
}

func onPress13_2() {
  pressScanCode(7 /* "D" */);
}
func onRelease13_2() {
  releaseScanCode(7 /* "D" */);
}

func onPress14() {
  dispatchToLayer([[[@onPress14_0, 0, @onPress14_2]]]);
}
func onRelease14() {
  dispatchToLayer([[[@onRelease14_0, 0, @onRelease14_2]]]);
}

func onPress14_0() {
  pressStenoKey(7 /* "R-" */);
}
func onRelease14_0() {
  releaseStenoKey(7 /* "R-" */);
}

func onPress14_2() {
  pressScanCode(9 /* "F" */);
}
func onRelease14_2() {
  releaseScanCode(9 /* "F" */);
}

func onPress15() {
  dispatchToLayer([[[@onPress15_0, 0, @onPress15_2]]]);
}
func onRelease15() {
  dispatchToLayer([[[@onRelease15_0, 0, @onRelease15_2]]]);
}

func onPress15_0() {
  pressStenoKey(11 /* "*2" */);
}
func onRelease15_0() {
  releaseStenoKey(11 /* "*2" */);
}

func onPress15_2() {
  pressScanCode(10 /* "G" */);
}
func onRelease15_2() {
  releaseScanCode(10 /* "G" */);
}

func onPress16() {
  dispatchToLayer([[[@onPress16_0, 0, @onPress16_2]]]);
}
func onRelease16() {
  dispatchToLayer([[[@onRelease16_0, 0, @onRelease16_2]]]);
}

func onPress16_0() {
  pressStenoKey(13 /* "*4" */);
}
func onRelease16_0() {
  releaseStenoKey(13 /* "*4" */);
}

func onPress16_2() {
  pressScanCode(11 /* "H" */);
}
func onRelease16_2() {
  releaseScanCode(11 /* "H" */);
}

func onPress17() {
  dispatchToLayer([[[@onPress17_0, 0, @onPress17_2]]]);
}
func onRelease17() {
  dispatchToLayer([[[@onRelease17_0, 0, @onRelease17_2]]]);
}

func onPress17_0() {
  pressStenoKey(17 /* "-R" */);
}
func onRelease17_0() {
  releaseStenoKey(17 /* "-R" */);
}

func onPress17_2() {
  pressScanCode(13 /* "J" */);
}
func onRelease17_2() {
  releaseScanCode(13 /* "J" */);
}

func onPress18() {
  dispatchToLayer([[[@onPress18_0, 0, @onPress18_2]]]);
}
func onRelease18() {
  dispatchToLayer([[[@onRelease18_0, 0, @onRelease18_2]]]);
}

func onPress18_0() {
  pressStenoKey(19 /* "-B" */);
}
func onRelease18_0() {
  releaseStenoKey(19 /* "-B" */);
}

func onPress18_2() {
  pressScanCode(14 /* "K" */);
}
func onRelease18_2() {
  releaseScanCode(14 /* "K" */);
}

func onPress19() {
  dispatchToLayer([[[@onPress19_0, 0, @onPress19_2]]]);
}
func onRelease19() {
  dispatchToLayer([[[@onRelease19_0, 0, @onRelease19_2]]]);
}

func onPress19_0() {
  pressStenoKey(21 /* "-G" */);
}
func onRelease19_0() {
  releaseStenoKey(21 /* "-G" */);
}

func onPress19_2() {
  pressScanCode(15 /* "L" */);
}
func onRelease19_2() {
  releaseScanCode(15 /* "L" */);
}

func onPress20() {
  dispatchToLayer([[[@onPress20_0, 0, @onPress20_2]]]);
}
func onRelease20() {
  dispatchToLayer([[[@onRelease20_0, 0, @onRelease20_2]]]);
}

func onPress20_0() {
  pressStenoKey(23 /* "-S" */);
}
func onRelease20_0() {
  releaseStenoKey(23 /* "-S" */);
}

func onPress20_2() {
  pressScanCode(51 /* ";" */);
}
func onRelease20_2() {
  releaseScanCode(51 /* ";" */);
}

func onPress21() {
  dispatchToLayer([[[@onPress21_0, 0, @onPress21_2]]]);
}
func onRelease21() {
  dispatchToLayer([[[@onRelease21_0, 0, @onRelease21_2]]]);
}

func onPress21_0() {
  pressStenoKey(25 /* "-Z" */);
}
func onRelease21_0() {
  releaseStenoKey(25 /* "-Z" */);
}

func onPress21_2() {
  pressScanCode(53 /* "`" */);
}
func onRelease21_2() {
  releaseScanCode(53 /* "`" */);
}

func onPress22() {
  dispatchToLayer([[[@onPress22_0, 0, @onPress22_2]]]);
}
func onRelease22() {
  dispatchToLayer([[[@onRelease22_0, 0, @onRelease22_2]]]);
}

func onPress22_0() {
  pressStenoKey(26 /* "#1" */);
}
func onRelease22_0() {
  releaseStenoKey(26 /* "#1" */);
}

func onPress22_2() {
  pressStenoKey(26 /* "#1" */);
}
func onRelease22_2() {
  releaseStenoKey(26 /* "#1" */);
}

func onPress23() {
  dispatchToLayer([[[@onPress23_0, 0, @onPress23_2]]]);
}
func onRelease23() {
  dispatchToLayer([[[@onRelease23_0, 0, @onRelease23_2]]]);
}

func onPress23_0() {
  pressStenoKey(8 /* "A" */);
}
func onRelease23_0() {
  releaseStenoKey(8 /* "A" */);
}

func onPress23_2() {
  pressScanCode(6 /* "C" */);
}
func onRelease23_2() {
  releaseScanCode(6 /* "C" */);
}

func onPress24() {
  dispatchToLayer([[[@onPress24_0, 0, @onPress24_2]]]);
}
func onRelease24() {
  dispatchToLayer([[[@onRelease24_0, 0, @onRelease24_2]]]);
}

func onPress24_0() {
  pressStenoKey(9 /* "O" */);
}
func onRelease24_0() {
  releaseStenoKey(9 /* "O" */);
}

func onPress24_2() {
  pressScanCode(25 /* "V" */);
}
func onRelease24_2() {
  releaseScanCode(25 /* "V" */);
}

func onPress25() {
  dispatchToLayer([[[@onPress25_0, 0, @onPress25_2]]]);
}
func onRelease25() {
  dispatchToLayer([[[@onRelease25_0, 0, @onRelease25_2]]]);
}

func onPress25_0() {
  pressStenoKey(14 /* "E" */);
}
func onRelease25_0() {
  releaseStenoKey(14 /* "E" */);
}

func onPress25_2() {
  pressScanCode(17 /* "N" */);
}
func onRelease25_2() {
  releaseScanCode(17 /* "N" */);
}

func onPress26() {
  dispatchToLayer([[[@onPress26_0, @onPress26_1, @onPress26_2]]]);
}
func onRelease26() {
  dispatchToLayer([[[@onRelease26_0, 0, @onRelease26_2]]]);
}

func onPress26_0() {
  pressStenoKey(15 /* "U" */);
}
func onRelease26_0() {
  releaseStenoKey(15 /* "U" */);
}

func onPress26_1() {
  deactivateGlobal();
  deactivate1();
  activate2();
  activateGlobal();
}
func onRelease26_1() {
}

func onPress26_2() {
  pressScanCode(16 /* "M" */);
}
func onRelease26_2() {
  releaseScanCode(16 /* "M" */);
}

var pressCount27;
var pressTime27;
var tapCount27;
func onPress27() {
  if (getTime() - pressTime27 >= 250) pressCount27 = 0;
  else pressCount27 = pressCount27 + 1;
  if (getTime() - pressTime27 >= 250) tapCount27 = 0;
  if (!isInPressAll()) pressTime27 = getTime();
  dispatchToLayer([[[@onPress27_0, @onPress27_1, @onPress27_2]]]);
}
func onRelease27() {
  dispatchToLayer([[[@onRelease27_0, 0, 0]]]);
}

func onPress27_0() {
  pressStenoKey(27 /* "#2" */);
}
func onRelease27_0() {
  releaseStenoKey(27 /* "#2" */);
  if (getTime() - pressTime27 <= 200) {
    tapCount27 = tapCount27 + 1;
    if (tapCount27 == 2) {
      deactivateGlobal();
      deactivate0();
      activate1();
      activateGlobal();

      return;
    }
  }
}

func onPress27_1() {
  deactivateGlobal();
  deactivate1();
  activate0();
  activateGlobal();
}
func onRelease27_1() {
}

func onPress27_2() {
  if (pressCount27 == 1) {
    deactivateGlobal();
    deactivate2();
    activate1();
    activateGlobal();

    return;
  }
}
func onRelease27_2() {
}
